@page "/"
@inject PrioridadesBLL prioridadBLL
@rendermode InteractiveServer

<PageTitle>Registro Prioridades</PageTitle>
<EditForm Model="Prioridad" OnInvalidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro Prioridades</h3>
            </div>
            <div class="card-body">
                @*Prioridades Id*@
                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-6 col-xl-4">
                    <label>Prioridad Id</label>
                    <div class="input-group mb-3">
                        <InputNumber @bind-Value="Prioridad.PrioridadId" class="form-control" aria-describedby="BotonBuscar"/>
                        <button @onclick="Buscar" class="btn btn-outline-primary" type="button" id="BotonBuscar"><i class="oi oi-magnifying-glass" /></button>
                    </div>
                    <p class="text-danger">@MensajeId</p>
                </div>
                @*Días Compromiso*@
                <div class="mb-3">
                    <label class="form-label" for="Soliciatdo Por">Descripci&oacute;n</label>
                    <InputText @bind-Value="Prioridad.Descripción" class="form-control"/>
                    <ValidationMessage For="@(() => Prioridad.Descripción)"/>
                    <p class="text-danger">@Mensaje</p>
                </div>
                @*Días Compromiso*@
                <div class="mb-3">
                    <label class="form-label" for="Días">D&iacute;as</label>
                    <InputNumber @bind-Value="Prioridad.DiasCompromiso" class="form-check-label" step="1" min="1" max="31" />
                    <ValidationMessage For="@(() => Prioridad.DiasCompromiso)" />
                </div>
            </div>
            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">Nuevo<i class="oi oi-file" /></button>
                    <button type="submit" class="btn btn-outline-success"> Guardar<i class="oi oi-document" /></button>
                    <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar <i class="oi oi-trash" /></button>
                </div>
            </div>
        </div>
    </div>
</EditForm> 

@code{
    public Prioridades Prioridad{get; set;}= new Prioridades();
    public string Mensaje{ get; set; } = string.Empty;
    public string MensajeId{ get; set; } = string.Empty;


    public async Task Buscar()
    {
        var encontrado = await prioridadBLL.FindAsync(Prioridad.PrioridadId);
        if (encontrado != null)
        {
            Prioridad = encontrado;
            MensajeId = string.Empty;
        }
        else
            MensajeId = "No se encuentra el id";
    }

    public async Task Guardar(){
        var guardo = prioridadBLL.Save(this.Prioridad);
        if (guardo)
        {
            Mensaje = "Se guardó correctamente";
        }
        else
            Mensaje = "Ya existe una prioridad";
    }

    public async Task Eliminar(){
        var eliminado = prioridadBLL.Delete(Prioridad.PrioridadId);
        if (eliminado)
        {
            Mensaje = "Se eliminó correctamente";
            Nuevo();
        }
    }
    public void Nuevo()
    {
        this.Prioridad = new Prioridades();
        Mensaje = string.Empty;
    }
}


