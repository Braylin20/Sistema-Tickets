@page "/ConsultaPrioridades/EliminarPrioridad/{PrioridadId:int}"
@inject PrioridadesService prioridadService
@rendermode InteractiveServer


<div class="container">
    <div class="card">
        <div class="card-header">
            <h5>Detalles</h5>
        </div>
        <div class="card-body">
            <h6>ID de Prioridad: @Prioridad.PrioridadId</h6>
            <p>Descripción: @Prioridad.Descripcion</p>
            <p>Días de Compromiso: @Prioridad.DíasCompromiso</p>
        </div>
        <div class="card-footer">
            <div class="btn-group">
                <a href="/ConsultaPrioridades" class="btn btn-outline-primary bi bi-arrow-left-square-fill"> Atr&aacute;s</a>
                <button type="button"@onclick="Delete" class="btn btn-outline-danger bi bi-trash-fill"> Eliminar</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int PrioridadId { get; set; }
    public Prioridades Prioridad = new Prioridades();
    public string Mensaje = string.Empty;
    public bool elimino = false;

    protected override async Task OnInitializedAsync() => Prioridad = await prioridadService.FindAsync(PrioridadId);

    public async Task Delete()
    {
        var eliminado = await prioridadService.Delete(Prioridad.PrioridadId);
        if (eliminado)
        {
            Mensaje = "Se eliminó correctamente";
            Nuevo();
            elimino = true;
        }
        else
        {
            Mensaje = "Debe agregar un dato para eliminarlo";
            elimino = false;
        }
    }

    public void Nuevo()
    {
        this.Prioridad = new Prioridades();
    }
}
