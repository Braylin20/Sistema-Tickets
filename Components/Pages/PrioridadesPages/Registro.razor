@page "/Prioridades"
@inject PrioridadesService prioridadService
@rendermode InteractiveServer

<PageTitle>Registro Prioridades</PageTitle>
<EditForm Model="Prioridad" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro Prioridades</h3>
            </div>
            <div class="card-body">
                <div class="col-4">
                    <label>Prioridad Id</label>
                    <div>
                        <InputNumber @bind-Value="Prioridad.PrioridadId" @oninput="Ocultar" class="form-control" min="0"/>
                    </div>
                </div>
                <div class="mb-3">
                    <label>Descripci&oacute;n</label>
                    <InputText @bind-Value="Prioridad.Descripcion" @oninput="Ocultar" class="form-control" />
                    <ValidationMessage For="@(() => Prioridad.Descripcion)"/>
                </div>
                <div class="mb-3 col-2">
                    <label>D&iacute;as</label>
                    <InputNumber @bind-Value="Prioridad.DíasCompromiso" @oninput="Ocultar" class="form-control "min="1"/>
                    <ValidationMessage For="@(() => Prioridad.DíasCompromiso)" />
                </div>
                @if (Mensaje != null)
                {
                    <p class="text-danger">@Mensaje</p>
                }
            </div>
            <div class="card-footer d-flex justify-content-center">
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-primary bi bi-file-earmark-plus-fill fs-6" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-outline-success bi bi-floppy-fill">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm> 

@code
{
    public Prioridades Prioridad{get; set;}= new Prioridades();
    public string Mensaje{ get; set; } = string.Empty;

    public async Task Buscar()
    {
        var encontrado = await prioridadService.FindAsync(Prioridad.PrioridadId);
        if (encontrado != null)
        {
            Prioridad = encontrado;
            Mensaje = string.Empty;
        }
        else
            Mensaje = "No se encuentra el id";
    }

    public async Task Guardar()
    {
        var guardo = await prioridadService.Save(Prioridad);
        if (guardo)
        {
            Mensaje = "Se guardó correctamente";
            Nuevo();
        }
        else
            Mensaje = "Ya existe una prioridad";
        
    }

    public void Nuevo()
    {
        this.Prioridad = new Prioridades();
    }

    public void Ocultar(){
        Mensaje = string.Empty;
    }
}


